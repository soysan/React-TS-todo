{"version":3,"sources":["components/TodoItem.module.css","components/Todos.module.css","components/NewTodo.module.css","components/TodoItem.tsx","models/todo.ts","store/todos-context.tsx","components/Todos.tsx","components/NewTodo.tsx","App.tsx","index.tsx"],"names":["module","exports","TodoItem","props","className","classes","item","onClick","onRemoveTodo","text","Todo","todoText","id","this","Date","toISOString","TodosContext","React","createContext","items","addTodo","removeTodo","TodosContextProvider","useState","todos","setTodos","contextValue","newTodo","prevTodos","concat","todoId","filter","todo","Provider","value","children","Todos","todosCtx","useContext","map","bind","NewTodo","todoTextInputRef","useRef","onSubmit","event","preventDefault","enteredText","current","trim","length","form","htmlFor","type","ref","App","ReactDOM","render","document","getElementById"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,KAAO,yB,iBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,wB,+HCYVC,EAVwD,SACrEC,GAEA,OACE,oBAAIC,UAAWC,IAAQC,KAAMC,QAASJ,EAAMK,aAA5C,SACGL,EAAMM,Q,cCEEC,EANX,WAAYC,GAAmB,yBAH/BC,QAG8B,OAF9BH,UAE8B,EAC1BI,KAAKJ,KAAOE,EACZE,KAAKD,IAAK,IAAIE,MAAOC,eCGhBC,EAAeC,IAAMC,cAA+B,CAC/DC,MAAO,GACPC,QAAS,aACTC,WAAY,SAACT,OAiCAU,EA9BwB,SAACnB,GAAW,IAAD,EACtBoB,mBAAiB,IADK,mBACzCC,EADyC,KAClCC,EADkC,KAiB1CC,EAAgC,CACpCP,MAAOK,EACPJ,QAhBqB,SAACT,GACtB,IAAMgB,EAAU,IAAIjB,EAAKC,GAEzBc,GAAS,SAACG,GACR,OAAOA,EAAUC,OAAOF,OAa1BN,WATwB,SAACS,GACzBL,GAAS,SAACG,GACR,OAAOA,EAAUG,QAAO,SAACC,GAAD,OAAUA,EAAKpB,KAAOkB,UAUlD,OACE,cAACd,EAAaiB,SAAd,CAAuBC,MAAOR,EAA9B,SACGvB,EAAMgC,Y,gBClBEC,EAhBS,WACtB,IAAMC,EAAWC,qBAAWtB,GAE5B,OACE,oBAAIZ,UAAWC,IAAQmB,MAAvB,SACGa,EAASlB,MAAMoB,KAAI,SAACjC,GAAD,OAClB,cAAC,EAAD,CAEEG,KAAMH,EAAKG,KACXD,aAAc6B,EAAShB,WAAWmB,KAAK,KAAMlC,EAAKM,KAF7CN,EAAKM,U,gBCkBL6B,EA1BW,WACxB,IAAMJ,EAAWC,qBAAWtB,GACtB0B,EAAmBC,iBAAyB,MAelD,OACE,uBAAMC,SAdc,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAcL,EAAiBM,QAASd,MAEZ,IAA9Ba,EAAYE,OAAOC,QAKvBb,EAASjB,QAAQ2B,IAIc3C,UAAWC,IAAQ8C,KAAlD,UACE,uBAAOC,QAAQ,OAAf,uBACA,uBAAOC,KAAK,OAAOzC,GAAG,OAAO0C,IAAKZ,IAClC,kDCZSa,MATf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCHNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4f903d29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__EiNWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todos\":\"Todos_todos__2s1OT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewTodo_form__3foEh\"};","import React from \"react\";\nimport classes from \"./TodoItem.module.css\";\n\nconst TodoItem: React.FC<{ text: string; onRemoveTodo: () => void }> = (\n  props\n) => {\n  return (\n    <li className={classes.item} onClick={props.onRemoveTodo}>\n      {props.text}\n    </li>\n  );\n};\n\nexport default TodoItem;\n","class Todo {\n    id: string;\n    text: string;\n\n    constructor(todoText: string) {\n        this.text = todoText;\n        this.id = new Date().toISOString();\n    }\n}\n\nexport default Todo;\n","import React, { useState, useContext } from \"react\";\nimport Todo from \"../models/todo\";\n\ntype TodosContextObj = {\n  items: Todo[];\n  addTodo: (text: string) => void;\n  removeTodo: (id: string) => void;\n};\n\nexport const TodosContext = React.createContext<TodosContextObj>({\n  items: [],\n  addTodo: () => {},\n  removeTodo: (id: string) => {},\n});\n\nconst TodosContextProvider: React.FC = (props) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const addTodoHandler = (todoText: string) => {\n    const newTodo = new Todo(todoText);\n\n    setTodos((prevTodos) => {\n      return prevTodos.concat(newTodo);\n    });\n  };\n\n  const removeTodoHandler = (todoId: string) => {\n    setTodos((prevTodos) => {\n      return prevTodos.filter((todo) => todo.id !== todoId);\n    });\n  };\n\n  const contextValue: TodosContextObj = {\n    items: todos,\n    addTodo: addTodoHandler,\n    removeTodo: removeTodoHandler,\n  };\n\n  return (\n    <TodosContext.Provider value={contextValue}>\n      {props.children}\n    </TodosContext.Provider>\n  );\n};\n\nexport default TodosContextProvider;\n","import React, { useContext } from \"react\";\n\nimport TodoItem from \"./TodoItem\";\nimport { TodosContext } from \"../store/todos-context\";\nimport classes from \"./Todos.module.css\";\n\nconst Todos: React.FC = () => {\n  const todosCtx = useContext(TodosContext);\n\n  return (\n    <ul className={classes.todos}>\n      {todosCtx.items.map((item) => (\n        <TodoItem\n          key={item.id}\n          text={item.text}\n          onRemoveTodo={todosCtx.removeTodo.bind(null, item.id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default Todos;\n","import React, { useRef, useContext } from \"react\";\n\nimport { TodosContext } from '../store/todos-context';\nimport classes from \"./NewTodo.module.css\";\n\nconst NewTodo: React.FC = () => {\n  const todosCtx = useContext(TodosContext);\n  const todoTextInputRef = useRef<HTMLInputElement>(null);\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const enteredText = todoTextInputRef.current!.value;\n\n    if (enteredText.trim().length === 0) {\n      // throw an error\n      return;\n    }\n\n    todosCtx.addTodo(enteredText);\n  };\n\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <label htmlFor=\"text\">Todo text</label>\n      <input type=\"text\" id=\"text\" ref={todoTextInputRef} />\n      <button>Add Todo</button>\n    </form>\n  );\n};\n\nexport default NewTodo;\n","import React from \"react\";\nimport Todos from \"./components/Todos\";\nimport NewTodo from \"./components/NewTodo\";\nimport TodosContextProvider from \"./store/todos-context\";\n\nfunction App() {\n  return (\n    <TodosContextProvider>\n      <NewTodo />\n      <Todos />\n    </TodosContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}